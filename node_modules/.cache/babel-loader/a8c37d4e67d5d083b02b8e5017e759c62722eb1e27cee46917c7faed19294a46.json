{"ast":null,"code":"// 当前整个模块: API进行统一管理\nimport axios from './axios';\nexport async function post(url, data) {\n  return api.post(url, data).then(response => {\n    return response.data;\n  }).catch(error => {\n    // 在实际应用中，您可以根据需要处理错误，例如显示错误消息等\n    // ElMessage({\n    //     showClose: true,\n    //     message: '服务器异常',\n    //     type: 'error',\n    // });\n    throw error;\n  });\n}\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8';\n\n// 用户登录\nexport const reqUserLogin = data => axios({\n  url: '/user/login',\n  data,\n  method: 'post'\n});\n// 获取用户基本信息\nexport const reqGetUserInfo = ({\n  user_id\n}) => axios({\n  url: `/user/getuserinfo/${user_id}`,\n  method: 'get'\n});\n// 修改密码\nexport const reqUpdatePwd = data => axios({\n  url: '/user/updatepwd',\n  data,\n  method: 'post'\n});\n// 设置邮箱\nexport const reqSetEmail = data => axios({\n  url: '/user/setemail',\n  data,\n  method: 'post'\n});\n// 发送问题反馈\nexport const reqSendFeedback = data => axios({\n  url: '/user/sendfeedback',\n  data,\n  method: 'post'\n});\n\n// 后台管理\n// 添加用户\nexport const reqAddUser = data => axios({\n  url: '/back/user/adduser',\n  data,\n  method: 'post'\n});\n\n// 获取用户列表\nexport const reqGetUserList = data => axios({\n  url: '/user/list',\n  data,\n  method: 'post'\n});\n\n// 修改用户信息\nexport const reqBackUpdateUserInfo = data => axios({\n  url: '/back/user/updateuserinfo',\n  data,\n  method: 'post'\n});\n\n// 封禁用户\nexport const reqDelUser = ({\n  user_id\n}) => axios({\n  url: `/back/user/deluser/${user_id}`,\n  method: 'get'\n});\n\n// 添加座位\nexport const reqAddSeat = data => axios({\n  url: '/back/seat/addseat',\n  data,\n  method: 'post'\n});\n\n// 获取座位列表\nexport const reqGetSeatList = data => axios({\n  url: '/back/seat/getseatlist',\n  data,\n  method: 'post'\n});\n\n// 修改座位信息\nexport const reqBackUpdateSeatInfo = data => axios({\n  url: '/back/seat/updateseatinfo',\n  data,\n  method: 'post'\n});\n\n// 移除座位\nexport const reqDelSeat = ({\n  seat_id\n}) => axios({\n  url: `/back/seat/delseat/${seat_id}`,\n  method: 'get'\n});\n\n// 发布通知\nexport const reqAddNotice = data => axios({\n  url: '/back/notice/addnotice',\n  data,\n  method: 'post'\n});\n\n// 获取通知列表\nexport const reqGetNoticeList = data => axios({\n  url: '/back/notice/getnoticelist',\n  data,\n  method: 'post'\n});\n\n// 删除通知\nexport const reqDelNotice = ({\n  notice_id\n}) => axios({\n  url: `/back/notice/delnotice/${notice_id}`,\n  method: 'get'\n});\n\n// 获取预约信息列表\nexport const reqGetReserveList = data => axios({\n  url: '/back/reserve/getreservelist',\n  data,\n  method: 'post'\n});\n\n// 根据id删除超时的预约信息\nexport const reqDelReserve = ({\n  reserve_id,\n  seat_id\n}) => axios({\n  url: `/back/reserve/delreserve/${reserve_id}/${seat_id}`,\n  method: 'get'\n});\n\n// 清空超时记录\nexport const reqClearTimeoutReserve = () => axios({\n  url: '/back/reserve/delallreserve',\n  method: 'get'\n});\n\n// 前台显示\n// 获取通知列表\nexport const reqFrontGetNoticeList = ({\n  user_id\n}) => axios({\n  url: `/front/notice/getnoticelist/${user_id}`,\n  method: 'get'\n});\n\n// 设置阅读状态为已读\nexport const reqFrontSetRead = ({\n  user_id,\n  notice_id\n}) => axios({\n  url: `/front/notice/set_read/${user_id}/${notice_id}`,\n  method: 'get'\n});\n\n// 设置该用户的所有通知为已读\nexport const reqFrontAllSetRead = ({\n  user_id\n}) => axios({\n  url: `/front/notice/all_set_read/${user_id}`,\n  method: 'get'\n});\n\n// 获取座位列表\nexport const reqFrontGetSeatList = ({\n  seat_floor\n}) => axios({\n  url: `/front/seat/getseatlist/${seat_floor}`,\n  method: 'get'\n});\n\n// 预约座位\nexport const reqFrontReserveSeat = data => axios({\n  url: '/front/reserve/reserveseat',\n  data,\n  method: 'post'\n});\n\n// 获取预约信息\nexport const reqFrontGetReserveInfo = ({\n  user_id\n}) => axios({\n  url: `/front/reserve/getreserveinfo/${user_id}`,\n  method: 'get'\n});\n\n// 离开座位\nexport const reqFrontLeaveSeat = ({\n  user_id,\n  seat_id\n}) => axios({\n  url: `/front/reserve/leaveseat/${user_id}/${seat_id}`,\n  method: 'get'\n});\n//添加实验\nexport const reqAddTest = data => axios({\n  url: '/front/test/addtest',\n  data,\n  method: 'post'\n});\n// 获取实验列表\nexport const reqGetTestList = data => axios({\n  url: '/front/test/gettestlist',\n  data,\n  method: 'post'\n});\n// 修改实验信息\nexport const reqUpdateTestInfo = data => axios({\n  url: '/front/test/updatetestinfo',\n  data,\n  method: 'post'\n});","map":{"version":3,"names":["axios","post","url","data","api","then","response","catch","error","defaults","headers","reqUserLogin","method","reqGetUserInfo","user_id","reqUpdatePwd","reqSetEmail","reqSendFeedback","reqAddUser","reqGetUserList","reqBackUpdateUserInfo","reqDelUser","reqAddSeat","reqGetSeatList","reqBackUpdateSeatInfo","reqDelSeat","seat_id","reqAddNotice","reqGetNoticeList","reqDelNotice","notice_id","reqGetReserveList","reqDelReserve","reserve_id","reqClearTimeoutReserve","reqFrontGetNoticeList","reqFrontSetRead","reqFrontAllSetRead","reqFrontGetSeatList","seat_floor","reqFrontReserveSeat","reqFrontGetReserveInfo","reqFrontLeaveSeat","reqAddTest","reqGetTestList","reqUpdateTestInfo"],"sources":["C:/Users/86182/source/java/projects/RL-app/src/api/index.js"],"sourcesContent":["// 当前整个模块: API进行统一管理\r\nimport axios from './axios'\r\nexport async function post(url, data) {\r\n    return api.post(url, data)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            // 在实际应用中，您可以根据需要处理错误，例如显示错误消息等\r\n            // ElMessage({\r\n            //     showClose: true,\r\n            //     message: '服务器异常',\r\n            //     type: 'error',\r\n            // });\r\n            throw error;\r\n        });\r\n}\r\n\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8';\r\n\r\n// 用户登录\r\nexport const reqUserLogin = (data) => axios({ url: '/user/login', data, method: 'post' })\r\n// 获取用户基本信息\r\nexport const reqGetUserInfo = ({ user_id }) => axios({ url: `/user/getuserinfo/${user_id}`, method: 'get' })\r\n// 修改密码\r\nexport const reqUpdatePwd = (data) => axios({ url: '/user/updatepwd', data, method: 'post' })\r\n// 设置邮箱\r\nexport const reqSetEmail = (data) => axios({ url: '/user/setemail', data, method: 'post' })\r\n// 发送问题反馈\r\nexport const reqSendFeedback = (data) => axios({ url: '/user/sendfeedback', data, method: 'post' })\r\n\r\n\r\n// 后台管理\r\n// 添加用户\r\nexport const reqAddUser = (data) => axios({ url: '/back/user/adduser', data, method: 'post' })\r\n\r\n// 获取用户列表\r\nexport const reqGetUserList = (data) => axios({ url: '/user/list', data, method: 'post' })\r\n\r\n// 修改用户信息\r\nexport const reqBackUpdateUserInfo = (data) => axios({ url: '/back/user/updateuserinfo', data, method: 'post' })\r\n\r\n// 封禁用户\r\nexport const reqDelUser = ({ user_id }) => axios({ url: `/back/user/deluser/${user_id}`, method: 'get' })\r\n\r\n// 添加座位\r\nexport const reqAddSeat = (data) => axios({ url: '/back/seat/addseat', data, method: 'post' })\r\n\r\n// 获取座位列表\r\nexport const reqGetSeatList = (data) => axios({ url: '/back/seat/getseatlist', data, method: 'post' })\r\n\r\n// 修改座位信息\r\nexport const reqBackUpdateSeatInfo = (data) => axios({ url: '/back/seat/updateseatinfo', data, method: 'post' })\r\n\r\n// 移除座位\r\nexport const reqDelSeat = ({ seat_id }) => axios({ url: `/back/seat/delseat/${seat_id}`, method: 'get' })\r\n\r\n// 发布通知\r\nexport const reqAddNotice = (data) => axios({ url: '/back/notice/addnotice', data, method: 'post' })\r\n\r\n// 获取通知列表\r\nexport const reqGetNoticeList = (data) => axios({ url: '/back/notice/getnoticelist', data, method: 'post' })\r\n\r\n// 删除通知\r\nexport const reqDelNotice = ({ notice_id }) => axios({ url: `/back/notice/delnotice/${notice_id}`, method: 'get' })\r\n\r\n// 获取预约信息列表\r\nexport const reqGetReserveList = (data) => axios({ url: '/back/reserve/getreservelist', data, method: 'post' })\r\n\r\n// 根据id删除超时的预约信息\r\nexport const reqDelReserve = ({ reserve_id, seat_id }) => axios({ url: `/back/reserve/delreserve/${reserve_id}/${seat_id}`, method: 'get' })\r\n\r\n// 清空超时记录\r\nexport const reqClearTimeoutReserve = () => axios({ url: '/back/reserve/delallreserve', method: 'get' })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 前台显示\r\n// 获取通知列表\r\nexport const reqFrontGetNoticeList = ({ user_id }) => axios({ url: `/front/notice/getnoticelist/${user_id}`, method: 'get' })\r\n\r\n// 设置阅读状态为已读\r\nexport const reqFrontSetRead = ({ user_id, notice_id }) => axios({ url: `/front/notice/set_read/${user_id}/${notice_id}`, method: 'get' })\r\n\r\n// 设置该用户的所有通知为已读\r\nexport const reqFrontAllSetRead = ({ user_id }) => axios({ url: `/front/notice/all_set_read/${user_id}`, method: 'get' })\r\n\r\n// 获取座位列表\r\nexport const reqFrontGetSeatList = ({ seat_floor }) => axios({ url: `/front/seat/getseatlist/${seat_floor}`, method: 'get' })\r\n\r\n// 预约座位\r\nexport const reqFrontReserveSeat = (data) => axios({ url: '/front/reserve/reserveseat', data, method: 'post' })\r\n\r\n// 获取预约信息\r\nexport const reqFrontGetReserveInfo = ({ user_id }) => axios({ url: `/front/reserve/getreserveinfo/${user_id}`, method: 'get' })\r\n\r\n// 离开座位\r\nexport const reqFrontLeaveSeat = ({ user_id, seat_id }) => axios({ url: `/front/reserve/leaveseat/${user_id}/${seat_id}`, method: 'get' })\r\n//添加实验\r\nexport const reqAddTest = (data) => axios({ url: '/front/test/addtest', data, method: 'post' })\r\n// 获取实验列表\r\nexport const reqGetTestList = (data) => axios({ url: '/front/test/gettestlist', data, method: 'post' })\r\n// 修改实验信息\r\nexport const reqUpdateTestInfo = (data) => axios({ url: '/front/test/updatetestinfo', data, method: 'post' })\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAO,eAAeC,IAAIA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAClC,OAAOC,GAAG,CAACH,IAAI,CAACC,GAAG,EAAEC,IAAI,CAAC,CACrBE,IAAI,CAACC,QAAQ,IAAI;IACd,OAAOA,QAAQ,CAACH,IAAI;EACxB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;IACZ;IACA;IACA;IACA;IACA;IACA;IACA,MAAMA,KAAK;EACf,CAAC,CAAC;AACV;AAGAR,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACT,IAAI,CAAC,cAAc,CAAC,GAAG,gCAAgC;;AAE9E;AACA,OAAO,MAAMU,YAAY,GAAIR,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,aAAa;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;AACzF;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAKd,KAAK,CAAC;EAAEE,GAAG,EAAG,qBAAoBY,OAAQ,EAAC;EAAEF,MAAM,EAAE;AAAM,CAAC,CAAC;AAC5G;AACA,OAAO,MAAMG,YAAY,GAAIZ,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,iBAAiB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;AAC7F;AACA,OAAO,MAAMI,WAAW,GAAIb,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,gBAAgB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;AAC3F;AACA,OAAO,MAAMK,eAAe,GAAId,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,oBAAoB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAGnG;AACA;AACA,OAAO,MAAMM,UAAU,GAAIf,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,oBAAoB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAE9F;AACA,OAAO,MAAMO,cAAc,GAAIhB,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,YAAY;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAE1F;AACA,OAAO,MAAMQ,qBAAqB,GAAIjB,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,2BAA2B;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAEhH;AACA,OAAO,MAAMS,UAAU,GAAGA,CAAC;EAAEP;AAAQ,CAAC,KAAKd,KAAK,CAAC;EAAEE,GAAG,EAAG,sBAAqBY,OAAQ,EAAC;EAAEF,MAAM,EAAE;AAAM,CAAC,CAAC;;AAEzG;AACA,OAAO,MAAMU,UAAU,GAAInB,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,oBAAoB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAE9F;AACA,OAAO,MAAMW,cAAc,GAAIpB,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,wBAAwB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAEtG;AACA,OAAO,MAAMY,qBAAqB,GAAIrB,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,2BAA2B;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAEhH;AACA,OAAO,MAAMa,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK1B,KAAK,CAAC;EAAEE,GAAG,EAAG,sBAAqBwB,OAAQ,EAAC;EAAEd,MAAM,EAAE;AAAM,CAAC,CAAC;;AAEzG;AACA,OAAO,MAAMe,YAAY,GAAIxB,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,wBAAwB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAEpG;AACA,OAAO,MAAMgB,gBAAgB,GAAIzB,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,4BAA4B;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAE5G;AACA,OAAO,MAAMiB,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK9B,KAAK,CAAC;EAAEE,GAAG,EAAG,0BAAyB4B,SAAU,EAAC;EAAElB,MAAM,EAAE;AAAM,CAAC,CAAC;;AAEnH;AACA,OAAO,MAAMmB,iBAAiB,GAAI5B,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,8BAA8B;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAE/G;AACA,OAAO,MAAMoB,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEP;AAAQ,CAAC,KAAK1B,KAAK,CAAC;EAAEE,GAAG,EAAG,4BAA2B+B,UAAW,IAAGP,OAAQ,EAAC;EAAEd,MAAM,EAAE;AAAM,CAAC,CAAC;;AAE5I;AACA,OAAO,MAAMsB,sBAAsB,GAAGA,CAAA,KAAMlC,KAAK,CAAC;EAAEE,GAAG,EAAE,6BAA6B;EAAEU,MAAM,EAAE;AAAM,CAAC,CAAC;;AAQxG;AACA;AACA,OAAO,MAAMuB,qBAAqB,GAAGA,CAAC;EAAErB;AAAQ,CAAC,KAAKd,KAAK,CAAC;EAAEE,GAAG,EAAG,+BAA8BY,OAAQ,EAAC;EAAEF,MAAM,EAAE;AAAM,CAAC,CAAC;;AAE7H;AACA,OAAO,MAAMwB,eAAe,GAAGA,CAAC;EAAEtB,OAAO;EAAEgB;AAAU,CAAC,KAAK9B,KAAK,CAAC;EAAEE,GAAG,EAAG,0BAAyBY,OAAQ,IAAGgB,SAAU,EAAC;EAAElB,MAAM,EAAE;AAAM,CAAC,CAAC;;AAE1I;AACA,OAAO,MAAMyB,kBAAkB,GAAGA,CAAC;EAAEvB;AAAQ,CAAC,KAAKd,KAAK,CAAC;EAAEE,GAAG,EAAG,8BAA6BY,OAAQ,EAAC;EAAEF,MAAM,EAAE;AAAM,CAAC,CAAC;;AAEzH;AACA,OAAO,MAAM0B,mBAAmB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAKvC,KAAK,CAAC;EAAEE,GAAG,EAAG,2BAA0BqC,UAAW,EAAC;EAAE3B,MAAM,EAAE;AAAM,CAAC,CAAC;;AAE7H;AACA,OAAO,MAAM4B,mBAAmB,GAAIrC,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,4BAA4B;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;;AAE/G;AACA,OAAO,MAAM6B,sBAAsB,GAAGA,CAAC;EAAE3B;AAAQ,CAAC,KAAKd,KAAK,CAAC;EAAEE,GAAG,EAAG,iCAAgCY,OAAQ,EAAC;EAAEF,MAAM,EAAE;AAAM,CAAC,CAAC;;AAEhI;AACA,OAAO,MAAM8B,iBAAiB,GAAGA,CAAC;EAAE5B,OAAO;EAAEY;AAAQ,CAAC,KAAK1B,KAAK,CAAC;EAAEE,GAAG,EAAG,4BAA2BY,OAAQ,IAAGY,OAAQ,EAAC;EAAEd,MAAM,EAAE;AAAM,CAAC,CAAC;AAC1I;AACA,OAAO,MAAM+B,UAAU,GAAIxC,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,qBAAqB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;AAC/F;AACA,OAAO,MAAMgC,cAAc,GAAIzC,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,yBAAyB;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC;AACvG;AACA,OAAO,MAAMiC,iBAAiB,GAAI1C,IAAI,IAAKH,KAAK,CAAC;EAAEE,GAAG,EAAE,4BAA4B;EAAEC,IAAI;EAAES,MAAM,EAAE;AAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}