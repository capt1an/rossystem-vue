{"ast":null,"code":"import { reqAddcontainer, reqGetcontainerList, reqDelcontainer } from '@/api';\nconst state = {\n  containerlist: [],\n  // 容器列表\n  container_count: 0 // 容器数量\n};\n\nconst mutations = {\n  // 获取容器列表\n  GETCONTAINERLIST(state, result) {\n    state.containerlist = result.data;\n    state.container_count = result.container_count;\n  }\n};\nconst actions = {\n  // 发布容器\n  async addcontainer({\n    commit\n  }, container) {\n    //eslint-disable-line no-unused-vars\n    let result = await reqAddcontainer(container);\n    result = result.data;\n    console.log(result);\n    if (result.code === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 获取容器列表\n  async getcontainerList({\n    commit\n  }, info) {\n    let result = await reqGetcontainerList(info);\n    result = result.data;\n    console.log(result);\n    if (result.code === 0) {\n      commit('GETCONTAINERLIST', result);\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 删除容器\n  async delcontainer({\n    commit\n  }, container_id) {\n    //eslint-disable-line no-unused-vars\n    let result = await reqDelcontainer(container_id);\n    result = result.data;\n    console.log(result);\n    if (result.code === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  }\n};\nconst getters = {\n  containerlist(state) {\n    return state.containerlist || [];\n  },\n  container_count(state) {\n    return state.container_count || 0;\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqAddcontainer","reqGetcontainerList","reqDelcontainer","state","containerlist","container_count","mutations","GETCONTAINERLIST","result","data","actions","addcontainer","commit","container","console","log","code","msg","Promise","reject","Error","getcontainerList","info","delcontainer","container_id","getters"],"sources":["C:/Users/86182/source/java/projects/RL-app/src/store/back/container.js"],"sourcesContent":["import { reqAddcontainer, reqGetcontainerList, reqDelcontainer } from '@/api'\r\n\r\n\r\n\r\nconst state = {\r\n    containerlist: [], // 容器列表\r\n    container_count: 0, // 容器数量\r\n}\r\n\r\nconst mutations = {\r\n    // 获取容器列表\r\n    GETCONTAINERLIST(state, result) {\r\n        state.containerlist = result.data\r\n        state.container_count = result.container_count\r\n    },\r\n}\r\n\r\nconst actions = {\r\n    // 发布容器\r\n    async addcontainer({ commit }, container) {//eslint-disable-line no-unused-vars\r\n        let result = await reqAddcontainer(container)\r\n        result = result.data\r\n        console.log(result)\r\n        if (result.code === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 获取容器列表\r\n    async getcontainerList({ commit }, info) {\r\n        let result = await reqGetcontainerList(info)\r\n        result = result.data\r\n        console.log(result)\r\n        if (result.code === 0) {\r\n            commit('GETCONTAINERLIST', result)\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 删除容器\r\n    async delcontainer({ commit }, container_id) {//eslint-disable-line no-unused-vars\r\n        let result = await reqDelcontainer(container_id)\r\n        result = result.data\r\n        console.log(result)\r\n        if (result.code === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n}\r\n\r\nconst getters = {\r\n    containerlist(state) {\r\n        return state.containerlist || []\r\n    },\r\n    container_count(state) {\r\n        return state.container_count || 0\r\n    },\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"AAAA,SAASA,eAAe,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,OAAO;AAI7E,MAAMC,KAAK,GAAG;EACVC,aAAa,EAAE,EAAE;EAAE;EACnBC,eAAe,EAAE,CAAC,CAAE;AACxB,CAAC;;AAED,MAAMC,SAAS,GAAG;EACd;EACAC,gBAAgBA,CAACJ,KAAK,EAAEK,MAAM,EAAE;IAC5BL,KAAK,CAACC,aAAa,GAAGI,MAAM,CAACC,IAAI;IACjCN,KAAK,CAACE,eAAe,GAAGG,MAAM,CAACH,eAAe;EAClD;AACJ,CAAC;AAED,MAAMK,OAAO,GAAG;EACZ;EACA,MAAMC,YAAYA,CAAC;IAAEC;EAAO,CAAC,EAAEC,SAAS,EAAE;IAAC;IACvC,IAAIL,MAAM,GAAG,MAAMR,eAAe,CAACa,SAAS,CAAC;IAC7CL,MAAM,GAAGA,MAAM,CAACC,IAAI;IACpBK,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,IAAIA,MAAM,CAACQ,IAAI,KAAK,CAAC,EAAE;MACnB,OAAOR,MAAM,CAACS,GAAG,IAAI,IAAI;IAC7B,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACZ,MAAM,CAACS,GAAG,IAAI,MAAM,CAAC,CAAC;IAC1D;EACJ,CAAC;EACD;EACA,MAAMI,gBAAgBA,CAAC;IAAET;EAAO,CAAC,EAAEU,IAAI,EAAE;IACrC,IAAId,MAAM,GAAG,MAAMP,mBAAmB,CAACqB,IAAI,CAAC;IAC5Cd,MAAM,GAAGA,MAAM,CAACC,IAAI;IACpBK,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,IAAIA,MAAM,CAACQ,IAAI,KAAK,CAAC,EAAE;MACnBJ,MAAM,CAAC,kBAAkB,EAAEJ,MAAM,CAAC;MAClC,OAAOA,MAAM,CAACS,GAAG,IAAI,IAAI;IAC7B,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACZ,MAAM,CAACS,GAAG,IAAI,MAAM,CAAC,CAAC;IAC1D;EACJ,CAAC;EACD;EACA,MAAMM,YAAYA,CAAC;IAAEX;EAAO,CAAC,EAAEY,YAAY,EAAE;IAAC;IAC1C,IAAIhB,MAAM,GAAG,MAAMN,eAAe,CAACsB,YAAY,CAAC;IAChDhB,MAAM,GAAGA,MAAM,CAACC,IAAI;IACpBK,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,IAAIA,MAAM,CAACQ,IAAI,KAAK,CAAC,EAAE;MACnB,OAAOR,MAAM,CAACS,GAAG,IAAI,IAAI;IAC7B,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACZ,MAAM,CAACS,GAAG,IAAI,MAAM,CAAC,CAAC;IAC1D;EACJ;AACJ,CAAC;AAED,MAAMQ,OAAO,GAAG;EACZrB,aAAaA,CAACD,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACC,aAAa,IAAI,EAAE;EACpC,CAAC;EACDC,eAAeA,CAACF,KAAK,EAAE;IACnB,OAAOA,KAAK,CAACE,eAAe,IAAI,CAAC;EACrC;AACJ,CAAC;AAED,eAAe;EACXF,KAAK;EACLG,SAAS;EACTI,OAAO;EACPe;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}